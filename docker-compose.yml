---
version: '3.8'
services:
#
# >>> cdcservice
# https://eventuate.io/docs/manual/eventuate-tram/latest/cdc-configuration.html
#
  cdcservice:
    image: eventuateio/eventuate-cdc-service:0.9.0.RELEASE
    ports:
      - 8099:8080
    depends_on:
      - order-db
      - payment-db
      - kafka
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://0.0.0.0:3306/eventuate
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.jdbc.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATELOCAL_CDC_DB_USER_NAME: root
      EVENTUATELOCAL_CDC_DB_PASSWORD: root
      EVENTUATELOCAL_CDC_READ_OLD_DEBEZIUM_DB_OFFSET_STORAGE_TOPIC: "false"
      EVENTUATELOCAL_CDC_READER_NAME: ClientEventuateTram
      EVENTUATELOCAL_CDC_MYSQL_BINLOG_CLIENT_UNIQUE_ID: 2
# <<< cdcservice

#
# >>> kafka
# https://github.com/confluentinc/cp-all-in-one/blob/6.0.1-post/cp-all-in-one/docker-compose.yml
#
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:6.0.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9101:9101
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
# <<< kafka

#
# >>> mysql
#
  order-db:
    image: mysql:5.6
    hostname: order-db
    container_name: order-db
    ports:
      - 3306:3306
    volumes:
      - "./docker/order-db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order
      MYSQL_USER: user
      MYSQL_PASSWORD: password
  payment-db:
    image: mysql:5.6
    hostname: payment-db
    container_name: payment-db
    ports:
      - 3307:3306
    volumes:
      - "./docker/payment-db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: payment
      MYSQL_USER: user
      MYSQL_PASSWORD: password
# <<< mongodb